{"ast":null,"code":"var _jsxFileName = \"D:\\\\NashTech\\\\assignment_rookie\\\\Rookie_ecommerce\\\\rookie.admin\\\\src\\\\shared-components\\\\FormInputs\\\\SelectField.js\",\n    _s = $RefreshSig$();\n\nimport React, { InputHTMLAttributes } from 'react';\nimport { useField } from 'formik';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectField = props => {\n  _s();\n\n  const [field, {\n    error,\n    touched,\n    value\n  }, {\n    setValue\n  }] = useField(props);\n  const {\n    name,\n    options,\n    label,\n    isrequired\n  } = props;\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-4 col-form-label d-flex\",\n        children: [label, isrequired && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid ml-1\",\n          children: \"(*)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            hidden: true,\n            children: \"Open this select menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), options.map(_ref => {\n            let {\n              id,\n              label: optionLabel,\n              value: optionValue\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: optionValue,\n              selected: optionValue === value,\n              children: optionLabel\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectField, \"BmJKq/LPAATQGvZnU73R2XtPlqE=\", false, function () {\n  return [useField];\n});\n\n_c = SelectField;\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["D:/NashTech/assignment_rookie/Rookie_ecommerce/rookie.admin/src/shared-components/FormInputs/SelectField.js"],"names":["React","InputHTMLAttributes","useField","Form","SelectField","props","field","error","touched","value","setValue","name","options","label","isrequired","handleChange","e","target","map","id","optionLabel","optionValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAR,EAAmC;AAAEC,IAAAA;AAAF,GAAnC,IAAmDR,QAAQ,CAACG,KAAD,CAAjE;AAEA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAuCT,KAA7C;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,6BAAjB;AAAA,mBACKI,KADL,EAEKC,UAAU,iBACP;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,QAAQ,EAAEC,YAA5C;AAAA,kCACI;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGQH,OAAO,CAACM,GAAR,CAAY;AAAA,gBAAC;AAAEC,cAAAA,EAAF;AAAMN,cAAAA,KAAK,EAAEO,WAAb;AAA0BX,cAAAA,KAAK,EAAEY;AAAjC,aAAD;AAAA,gCACR;AAAiB,cAAA,KAAK,EAAEA,WAAxB;AAAqC,cAAA,QAAQ,EAAIA,WAAW,KAAKZ,KAAjE;AAAA,wBACKW;AADL,eAAaD,EAAb;AAAA;AAAA;AAAA;AAAA,oBADQ;AAAA,WAAZ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyBH,CAlCD;;GAAMf,W;UACuDF,Q;;;KADvDE,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { InputHTMLAttributes } from 'react';\nimport { useField } from 'formik';\nimport { Form } from 'react-bootstrap';\n\nconst SelectField = (props) => {\n    const [field, { error, touched, value }, { setValue }] = useField(props);\n\n    const { name, options, label, isrequired } = props;\n\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    };\n\n    return (\n        <>\n            <div className=\"mb-3 row\">\n                <label className=\"col-4 col-form-label d-flex\">\n                    {label}\n                    {isrequired && (\n                        <div className=\"invalid ml-1\">(*)</div>\n                    )}\n                </label>\n\n                <div className=\"col\">\n                    <select className=\"custom-select\" onChange={handleChange}>\n                        <option selected hidden>Open this select menu</option>\n                        {\n                            options.map(({ id, label: optionLabel, value: optionValue }) => (\n                                <option key={id} value={optionValue} selected = {optionValue === value}>\n                                    {optionLabel}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default SelectField;\n"]},"metadata":{},"sourceType":"module"}