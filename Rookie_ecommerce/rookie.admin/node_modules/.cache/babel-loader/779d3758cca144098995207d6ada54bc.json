{"ast":null,"code":"var _jsxFileName = \"D:\\\\NashTech\\\\assignment_rookie\\\\Rookie_ecommerce\\\\rookie.admin\\\\src\\\\components\\\\Brand\\\\List\\\\BrandTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PencilFill, XCircle } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport ButtonIcon from \"../../../shared-components/ButtonIcon\";\nimport { NotificationManager } from 'react-notifications';\nimport Table, { SortType } from \"../../../shared-components/Table\";\nimport Info from \"../Info\";\nimport { EDIT_BRAND_ID } from \"../../../Constants/pages\";\nimport ConfirmModal from \"../../../shared-components/ConfirmModal\";\nimport { NormalBrandType, NormalBrandTypeLabel, LuxuryBrandType, LuxyryBrandTypeLabel } from \"../../../Constants/Brand/BrandConstants\";\nimport { DisableBrandRequest } from \"../services/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  columnName: \"id\",\n  columnValue: \"Id\"\n}, {\n  columnName: \"name\",\n  columnValue: \"Name\"\n}, {\n  columnName: \"type\",\n  columnValue: \"Type\"\n}];\n\nconst BrandTable = _ref => {\n  _s();\n\n  var _brands$items;\n\n  let {\n    brands,\n    handlePage,\n    handleSort,\n    sortState,\n    fetchData\n  } = _ref;\n  const [showDetail, setShowDetail] = useState(false);\n  const [brandDetail, setBrandDetail] = useState(null);\n  const [disableState, setDisable] = useState({\n    isOpen: false,\n    id: 0,\n    title: '',\n    message: '',\n    isDisable: true\n  });\n\n  const handleShowInfo = id => {\n    const brand = brands === null || brands === void 0 ? void 0 : brands.items.find(item => item.id === id);\n\n    if (brand) {\n      setBrandDetail(brand);\n      setShowDetail(true);\n    }\n  };\n\n  const getBrandTypeName = id => {\n    return id == LuxuryBrandType ? LuxyryBrandTypeLabel : NormalBrandTypeLabel;\n  };\n\n  const handleShowDisable = async id => {\n    setDisable({\n      id,\n      isOpen: true,\n      title: 'Are you sure',\n      message: 'Do you want to disable this Brand?',\n      isDisable: true\n    });\n  };\n\n  const handleCloseDisable = () => {\n    setDisable({\n      isOpen: false,\n      id: 0,\n      title: '',\n      message: '',\n      isDisable: true\n    });\n  };\n\n  const handleResult = async (result, message) => {\n    if (result) {\n      handleCloseDisable();\n      await fetchData();\n      NotificationManager.success(`Remove Brand Successful`, `Remove Successful`, 2000);\n    } else {\n      setDisable({ ...disableState,\n        title: 'Can not disable Brand',\n        message,\n        isDisable: result\n      });\n    }\n  };\n\n  const handleConfirmDisable = async () => {\n    let isSuccess = await DisableBrandRequest(disableState.id);\n\n    if (isSuccess) {\n      await handleResult(true, '');\n    }\n  };\n\n  const handleCloseDetail = () => {\n    setShowDetail(false);\n  };\n\n  const history = useHistory();\n\n  const handleEdit = id => {\n    const existBrand = brands === null || brands === void 0 ? void 0 : brands.items.find(item => item.id === Number(id));\n    history.push(EDIT_BRAND_ID(id), {\n      existBrand: existBrand\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      handleSort: handleSort,\n      sortState: sortState,\n      page: {\n        currentPage: brands === null || brands === void 0 ? void 0 : brands.currentPage,\n        totalPage: brands === null || brands === void 0 ? void 0 : brands.totalPages,\n        handleChange: handlePage\n      },\n      children: brands && (brands === null || brands === void 0 ? void 0 : (_brands$items = brands.items) === null || _brands$items === void 0 ? void 0 : _brands$items.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"\",\n        onClick: () => handleShowInfo(data.id),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getBrandTypeName(data.type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonIcon, {\n            onClick: () => handleEdit(data.id),\n            children: /*#__PURE__*/_jsxDEV(PencilFill, {\n              className: \"text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonIcon, {\n            onClick: () => handleShowDisable(data.id),\n            children: /*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"text-danger mx-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), brandDetail && showDetail && /*#__PURE__*/_jsxDEV(Info, {\n      brand: brandDetail,\n      handleClose: handleCloseDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      title: disableState.title,\n      isShow: disableState.isOpen,\n      onHide: handleCloseDisable,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: disableState.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), disableState.isDisable && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mr-3\",\n            onClick: handleConfirmDisable,\n            type: \"button\",\n            children: \"Disable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            onClick: handleCloseDisable,\n            type: \"button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BrandTable, \"FY4mKjkPOlxjRsYA7NpwlVSoyJY=\", false, function () {\n  return [useHistory];\n});\n\n_c = BrandTable;\nexport default BrandTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrandTable\");","map":{"version":3,"sources":["D:/NashTech/assignment_rookie/Rookie_ecommerce/rookie.admin/src/components/Brand/List/BrandTable.js"],"names":["React","useState","PencilFill","XCircle","useHistory","ButtonIcon","NotificationManager","Table","SortType","Info","EDIT_BRAND_ID","ConfirmModal","NormalBrandType","NormalBrandTypeLabel","LuxuryBrandType","LuxyryBrandTypeLabel","DisableBrandRequest","columns","columnName","columnValue","BrandTable","brands","handlePage","handleSort","sortState","fetchData","showDetail","setShowDetail","brandDetail","setBrandDetail","disableState","setDisable","isOpen","id","title","message","isDisable","handleShowInfo","brand","items","find","item","getBrandTypeName","handleShowDisable","handleCloseDisable","handleResult","result","success","handleConfirmDisable","isSuccess","handleCloseDetail","history","handleEdit","existBrand","Number","push","currentPage","totalPage","totalPages","handleChange","map","data","index","name","type"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { PencilFill, XCircle } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport ButtonIcon from \"../../../shared-components/ButtonIcon\";\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport Table, { SortType } from \"../../../shared-components/Table\";\r\nimport Info from \"../Info\";\r\nimport { EDIT_BRAND_ID } from \"../../../Constants/pages\";\r\nimport ConfirmModal from \"../../../shared-components/ConfirmModal\";\r\nimport { \r\n  NormalBrandType,\r\n  NormalBrandTypeLabel,\r\n  LuxuryBrandType, \r\n  LuxyryBrandTypeLabel \r\n} from \"../../../Constants/Brand/BrandConstants\";\r\nimport { DisableBrandRequest } from \"../services/request\"\r\n\r\nconst columns= [\r\n  { columnName: \"id\", columnValue: \"Id\" },\r\n  { columnName: \"name\", columnValue: \"Name\" },\r\n  { columnName: \"type\", columnValue: \"Type\" }\r\n];\r\n\r\nconst BrandTable = ({\r\n  brands,\r\n  handlePage,\r\n  handleSort,\r\n  sortState,\r\n  fetchData,\r\n}) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const [brandDetail, setBrandDetail] = useState(null);\r\n  const [disableState, setDisable] = useState({\r\n    isOpen: false,\r\n    id: 0,\r\n    title: '',\r\n    message: '',\r\n    isDisable: true,\r\n  });\r\n\r\n  const handleShowInfo = (id) => {\r\n    const brand = brands?.items.find((item) => item.id === id);\r\n\r\n    if (brand) {\r\n      setBrandDetail(brand);\r\n      setShowDetail(true);\r\n    }\r\n  };\r\n\r\n  const getBrandTypeName = (id) => {\r\n    return id == LuxuryBrandType ? LuxyryBrandTypeLabel : NormalBrandTypeLabel;\r\n  }\r\n\r\n  const handleShowDisable = async (id) => {\r\n    setDisable({\r\n      id,\r\n      isOpen: true,\r\n      title: 'Are you sure',\r\n      message: 'Do you want to disable this Brand?',\r\n      isDisable: true,\r\n    });\r\n  };\r\n\r\n  const handleCloseDisable = () => {\r\n    setDisable({\r\n      isOpen: false,\r\n      id: 0,\r\n      title: '',\r\n      message: '',\r\n      isDisable: true,\r\n    });\r\n  };\r\n\r\n  const handleResult = async (result, message) => {\r\n    if (result) {\r\n      handleCloseDisable();\r\n      await fetchData();\r\n      NotificationManager.success(\r\n        `Remove Brand Successful`,\r\n        `Remove Successful`,\r\n        2000,\r\n    );\r\n    } else {\r\n      setDisable({\r\n        ...disableState,\r\n        title: 'Can not disable Brand',\r\n        message,\r\n        isDisable: result\r\n      });\r\n    }\r\n  };\r\n    \r\n  const handleConfirmDisable = async () => {\r\n    let isSuccess = await DisableBrandRequest(disableState.id);\r\n    if (isSuccess) {\r\n      await handleResult(true, '');\r\n    }\r\n  };\r\n\r\n  const handleCloseDetail = () => {\r\n    setShowDetail(false);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleEdit = (id) => {\r\n    const existBrand = brands?.items.find(item => item.id === Number(id));\r\n    history.push(\r\n      EDIT_BRAND_ID(id),\r\n      {\r\n        existBrand: existBrand\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        columns={columns}\r\n        handleSort={handleSort}\r\n        sortState={sortState}\r\n        page={{\r\n          currentPage: brands?.currentPage,\r\n          totalPage: brands?.totalPages,\r\n          handleChange: handlePage,\r\n        }}\r\n      >\r\n        {brands && brands?.items?.map((data, index) => (\r\n          <tr key={index} className=\"\" onClick={() => handleShowInfo(data.id)}>\r\n            <td>{data.id}</td>\r\n            <td>{data.name}</td>\r\n            <td>{getBrandTypeName(data.type)}</td>\r\n\r\n            <td className=\"d-flex\">\r\n              <ButtonIcon onClick={() => handleEdit(data.id)}>\r\n                <PencilFill className=\"text-black\" />\r\n              </ButtonIcon>\r\n              <ButtonIcon onClick={() => handleShowDisable(data.id)}>\r\n                <XCircle className=\"text-danger mx-2\" />\r\n              </ButtonIcon>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </Table>\r\n      {brandDetail && showDetail && (\r\n        <Info brand={brandDetail} handleClose={handleCloseDetail} />\r\n      )}\r\n      <ConfirmModal\r\n        title={disableState.title}\r\n        isShow={disableState.isOpen}\r\n        onHide={handleCloseDisable}\r\n      >\r\n        <div>\r\n\r\n          <div className=\"text-center\">\r\n            {disableState.message}\r\n          </div>\r\n          {\r\n            disableState.isDisable && (\r\n              <div className=\"text-center mt-3\">\r\n                <button\r\n                  className=\"btn btn-danger mr-3\"\r\n                  onClick={handleConfirmDisable}\r\n                  type=\"button\"\r\n                >\r\n                  Disable\r\n            </button>\r\n\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  onClick={handleCloseDisable}\r\n                  type=\"button\"\r\n                >\r\n                  Cancel\r\n            </button>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </ConfirmModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandTable;\r\n"]},"metadata":{},"sourceType":"module"}