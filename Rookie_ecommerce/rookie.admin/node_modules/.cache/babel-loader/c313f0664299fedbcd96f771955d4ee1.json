{"ast":null,"code":"var _jsxFileName = \"D:\\\\NashTech\\\\assignment_rookie\\\\Rookie_ecommerce\\\\rookie.admin\\\\src\\\\components\\\\Brand\\\\List\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FunnelFill } from \"react-bootstrap-icons\";\nimport { Search } from \"react-feather\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\nimport { Link } from \"react-router-dom\";\nimport BrandTable from \"./BrandTable\";\nimport { FilterBrandTypeOptions } from \"../../../Constants/selectOptions\";\nimport { getBrandsRequest } from \"../services/request\";\nimport { ACCSENDING, DECSENDING, DEFAULT_BRAND_SORT_COLUMN_NAME, DEFAULT_PAGE_LIMIT } from \"../../../Constants/paging\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListBrand = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    page: 1,\n    limit: DEFAULT_PAGE_LIMIT,\n    sortOrder: DECSENDING,\n    sortColumn: DEFAULT_BRAND_SORT_COLUMN_NAME\n  });\n  const [search, setSearch] = useState(\"\");\n  const [brands, setBrands] = useState(\"\");\n  const [selectedType, setSelectedType] = useState([{\n    id: 1,\n    label: \"All\",\n    value: 0\n  }]);\n\n  const handleType = selected => {\n    if (selected.length === 0) {\n      setQuery({ ...query,\n        types: []\n      });\n      setSelectedType([FilterBrandTypeOptions[0]]);\n      return;\n    }\n\n    const selectedAll = selected.find(item => item.id === 1);\n    setSelectedType(prevSelected => {\n      if (!prevSelected.some(item => item.id === 1) && selectedAll) {\n        setQuery({ ...query,\n          types: []\n        });\n        return [selectedAll];\n      }\n\n      const newSelected = selected.filter(item => item.id !== 1);\n      const types = newSelected.map(item => item.value);\n      setQuery({ ...query,\n        types\n      });\n      return newSelected;\n    });\n  };\n\n  const handleChangeSearch = e => {\n    e.preventDefault();\n    const search = e.target.value;\n    setSearch(search);\n  };\n\n  const handlePage = page => {\n    setQuery({ ...query,\n      page\n    });\n  };\n\n  const handleSearch = () => {\n    setQuery({ ...query,\n      search\n    });\n  };\n\n  const handleSort = sortColumn => {\n    const sortOrder = query.sortOrder === ACCSENDING ? DECSENDING : ACCSENDING;\n    setQuery({ ...query,\n      sortColumn,\n      sortOrder\n    });\n  };\n\n  const fetchDataCallbackAsync = async () => {\n    let data = await getBrandsRequest(query);\n    console.log('fetchDataCallbackAsync');\n    console.log(data);\n    setBrands(data);\n  };\n\n  useEffect(() => {\n    async function fetchDataAsync() {\n      let result = await getBrandsRequest(query);\n      setBrands(result.data);\n    }\n\n    fetchDataAsync();\n  }, [query, brands]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"primaryColor text-title intro-x\",\n      children: \"Brand List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex mb-5 intro-x\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center w-md mr-5\",\n          children: [/*#__PURE__*/_jsxDEV(ReactMultiSelectCheckboxes, {\n            options: FilterBrandTypeOptions,\n            hideSearch: true,\n            placeholderButtonLabel: \"Type\",\n            value: selectedType,\n            onChange: handleType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-2\",\n            children: /*#__PURE__*/_jsxDEV(FunnelFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center w-ld ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChangeSearch,\n              value: search,\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handleSearch,\n              className: \"border p-2 pointer\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center ml-3\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/brand/create\",\n            type: \"button\",\n            className: \"btn btn-danger\",\n            children: \"Create new Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BrandTable, {\n        brands: brands,\n        handlePage: handlePage,\n        handleSort: handleSort,\n        sortState: {\n          columnValue: query.sortColumn,\n          orderBy: query.sortOrder\n        },\n        fetchData: fetchDataCallbackAsync\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListBrand, \"/cHIkqeCKqOPJabSMC7JuH7VwA0=\");\n\n_c = ListBrand;\nexport default ListBrand;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBrand\");","map":{"version":3,"sources":["D:/NashTech/assignment_rookie/Rookie_ecommerce/rookie.admin/src/components/Brand/List/index.js"],"names":["React","useEffect","useState","FunnelFill","Search","ReactMultiSelectCheckboxes","Link","BrandTable","FilterBrandTypeOptions","getBrandsRequest","ACCSENDING","DECSENDING","DEFAULT_BRAND_SORT_COLUMN_NAME","DEFAULT_PAGE_LIMIT","ListBrand","query","setQuery","page","limit","sortOrder","sortColumn","search","setSearch","brands","setBrands","selectedType","setSelectedType","id","label","value","handleType","selected","length","types","selectedAll","find","item","prevSelected","some","newSelected","filter","map","handleChangeSearch","e","preventDefault","target","handlePage","handleSearch","handleSort","fetchDataCallbackAsync","data","console","log","fetchDataAsync","result","columnValue","orderBy"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FunnelFill } from \"react-bootstrap-icons\";\r\nimport { Search } from \"react-feather\";\r\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport BrandTable from \"./BrandTable\";\r\n\r\nimport { FilterBrandTypeOptions } from \"../../../Constants/selectOptions\";\r\nimport { getBrandsRequest } from \"../services/request\"\r\nimport { \r\n  ACCSENDING, \r\n  DECSENDING, \r\n  DEFAULT_BRAND_SORT_COLUMN_NAME,\r\n  DEFAULT_PAGE_LIMIT\r\n} from \"../../../Constants/paging\"\r\n\r\nconst ListBrand = () => {\r\n  const [query, setQuery] = useState({\r\n    page: 1,\r\n    limit: DEFAULT_PAGE_LIMIT,\r\n    sortOrder: DECSENDING,\r\n    sortColumn: DEFAULT_BRAND_SORT_COLUMN_NAME\r\n  });\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [brands, setBrands] = useState(\"\");\r\n\r\n  const [selectedType, setSelectedType] = useState([\r\n    { id: 1, label: \"All\", value: 0 },\r\n  ]);\r\n\r\n  const handleType = (selected) => {\r\n    if (selected.length === 0) {\r\n      setQuery({\r\n        ...query,\r\n        types: [],\r\n      });\r\n\r\n      setSelectedType([FilterBrandTypeOptions[0]]);\r\n      return;\r\n    }\r\n\r\n    const selectedAll = selected.find((item) => item.id === 1);\r\n\r\n    setSelectedType((prevSelected) => {\r\n      if (!prevSelected.some((item) => item.id === 1) && selectedAll) {\r\n        setQuery({\r\n          ...query,\r\n          types: [],\r\n        });\r\n\r\n        return [selectedAll];\r\n      }\r\n\r\n      const newSelected = selected.filter((item) => item.id !== 1);\r\n      const types = newSelected.map((item) => item.value);\r\n\r\n      setQuery({\r\n        ...query,\r\n        types,\r\n      });\r\n\r\n      return newSelected;\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    e.preventDefault();\r\n\r\n    const search = e.target.value;\r\n    setSearch(search);\r\n  };\r\n\r\n  const handlePage = (page) => {\r\n    setQuery({\r\n      ...query,\r\n      page,\r\n    });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setQuery({\r\n      ...query,\r\n      search,\r\n    });\r\n  };\r\n\r\n  const handleSort = (sortColumn) => {\r\n    const sortOrder = query.sortOrder === ACCSENDING ? DECSENDING : ACCSENDING;\r\n\r\n    setQuery({\r\n      ...query,\r\n      sortColumn,\r\n      sortOrder,\r\n    });\r\n  };\r\n\r\n  const fetchDataCallbackAsync = async () =>  {\r\n    let data = await getBrandsRequest(query);\r\n    console.log('fetchDataCallbackAsync');\r\n    console.log(data);\r\n    setBrands(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchDataAsync() {\r\n      let result = await getBrandsRequest(query);\r\n      setBrands(result.data);\r\n    }\r\n\r\n    fetchDataAsync();\r\n  }, [query, brands]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"primaryColor text-title intro-x\">Brand List</div>\r\n\r\n      <div>\r\n        <div className=\"d-flex mb-5 intro-x\">\r\n          <div className=\"d-flex align-items-center w-md mr-5\">\r\n          <ReactMultiSelectCheckboxes\r\n              options={FilterBrandTypeOptions}\r\n              hideSearch={true}\r\n              placeholderButtonLabel=\"Type\"\r\n              value={selectedType}\r\n              onChange={handleType}\r\n            />\r\n\r\n            <div className=\"border p-2\">\r\n              <FunnelFill />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center w-ld ml-auto\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                onChange={handleChangeSearch}\r\n                value={search}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <span onClick={handleSearch} className=\"border p-2 pointer\">\r\n                <Search />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center ml-3\">\r\n            <Link to=\"/brand/create\" type=\"button\" className=\"btn btn-danger\">\r\n              Create new Brand\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <BrandTable\r\n          brands={brands}\r\n          handlePage={handlePage}\r\n          handleSort={handleSort}\r\n          sortState={{\r\n            columnValue: query.sortColumn,\r\n            orderBy: query.sortOrder,\r\n          }}\r\n          fetchData={fetchDataCallbackAsync}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListBrand;\r\n"]},"metadata":{},"sourceType":"module"}